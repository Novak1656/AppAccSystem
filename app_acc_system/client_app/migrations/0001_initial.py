# Generated by Django 4.1.1 on 2022-09-27 18:55

import client_app.models
from django.db import migrations, models
import django.db.models.deletion
import phonenumber_field.modelfields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Clients',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', models.SlugField(max_length=255, verbose_name='Слаг')),
                ('name', models.CharField(help_text='Введите название клиента...', max_length=255, verbose_name='Название')),
                ('second_name', models.CharField(blank=True, help_text='Введите дополнительное название клиента...', max_length=255, verbose_name='Дополнительное название')),
                ('site', models.CharField(blank=True, help_text='Введите адрес сайта клиента...', max_length=255, verbose_name='Адрес сайта')),
                ('email', models.EmailField(help_text='Введите адрес электронной почты клиента...', max_length=254, unique=True, verbose_name='Адрес электронной почты')),
                ('phone', phonenumber_field.modelfields.PhoneNumberField(help_text='Введите номер телефона клиента...', max_length=128, region='RU', unique=True, verbose_name='Номер телефона')),
                ('office_address', models.CharField(help_text='Введите адрес офиса клиента...', max_length=255, verbose_name='Адрес офиса')),
                ('legal_address', models.CharField(help_text='Введите юридический адрес клиента...', max_length=255, verbose_name='Юридический адрес')),
                ('inn', models.IntegerField(help_text='Пример: 0000000000', unique=True, verbose_name='ИНН')),
                ('kpp', models.IntegerField(help_text='Пример: 000000000', unique=True, verbose_name='КПП')),
                ('ogrn', models.IntegerField(help_text='Пример: 0000000000000', unique=True, verbose_name='ОГРН')),
                ('note', models.TextField(blank=True, help_text='Введите заметки по клиенту...', verbose_name='Заметки')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Добавлен')),
            ],
            options={
                'verbose_name': 'Клиент',
                'verbose_name_plural': 'Клиенты',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='EquipmentAttribute',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.PositiveSmallIntegerField(help_text='Введите код атрибута...', unique=True, verbose_name='Код')),
                ('name', models.CharField(help_text='Введите название атрибута...', max_length=255, unique=True, verbose_name='Название')),
                ('type_a', models.CharField(choices=[('string_attr', 'Строка'), ('date_attr', 'Дата'), ('many_attrs', 'Множественный выбор'), ('solo_attr', 'Единичный выбор')], max_length=25, verbose_name='Тип атрибута')),
            ],
            options={
                'verbose_name': 'Атрибут оборудования',
                'verbose_name_plural': 'Атрибуты оборудований',
                'ordering': ['-name'],
            },
        ),
        migrations.CreateModel(
            name='EquipmentType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.PositiveSmallIntegerField(help_text='Введите код типа...', unique=True, verbose_name='Код')),
                ('name', models.CharField(help_text='Введите название типа...', max_length=255, unique=True, verbose_name='Название')),
            ],
            options={
                'verbose_name': 'Тип оборудования',
                'verbose_name_plural': 'Типы оборудований',
                'ordering': ['-name'],
            },
        ),
        migrations.CreateModel(
            name='Equipments',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', models.SlugField(max_length=255, verbose_name='Слаг')),
                ('name', models.CharField(help_text='Введите название оборудования...', max_length=255, verbose_name='Название')),
                ('note', models.TextField(blank=True, verbose_name='Заметки')),
                ('attribute', models.ManyToManyField(related_name='equipments', to='client_app.equipmentattribute', verbose_name='Атрибуты')),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='equipments', to='client_app.clients', verbose_name='Клиент')),
                ('type', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='equipments', to='client_app.equipmenttype', verbose_name='Тип')),
            ],
            options={
                'verbose_name': 'Оборудование',
                'verbose_name_plural': 'Оборудования',
                'ordering': ['-name'],
            },
        ),
        migrations.CreateModel(
            name='EquipmentFiles',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', models.SlugField(max_length=255, verbose_name='Слаг')),
                ('title', models.CharField(help_text='Введите название файла...', max_length=255, verbose_name='Название')),
                ('description', models.TextField(help_text='Введите описание файла...', verbose_name='Описание')),
                ('file', models.FileField(upload_to=client_app.models.equipment_files_directory_path, verbose_name='Файл')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Добавлен')),
                ('equipment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='files', to='client_app.equipments', verbose_name='Оборудование')),
            ],
            options={
                'verbose_name': 'Файл оборудования',
                'verbose_name_plural': 'Файлы оборудований',
                'ordering': ['-created_at'],
            },
        ),
        migrations.AddField(
            model_name='equipmentattribute',
            name='type_e',
            field=models.ManyToManyField(related_name='equipment_attrs', to='client_app.equipmenttype', verbose_name='Типы оборудования'),
        ),
        migrations.CreateModel(
            name='Contracts',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', models.SlugField(max_length=255, verbose_name='Слаг')),
                ('title', models.CharField(help_text='Введите название контракта...', max_length=255, verbose_name='Название')),
                ('price', models.PositiveBigIntegerField(help_text='Введите цену контракта...', verbose_name='Цена')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания контракта')),
                ('is_end', models.BooleanField(default=False, verbose_name='Контракт закрыт')),
                ('date_end', models.DateTimeField(blank=True, null=True, verbose_name='Дата закрытия контракта')),
                ('note', models.TextField(blank=True, verbose_name='Заметки')),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='contracts', to='client_app.clients', verbose_name='Клиент')),
            ],
            options={
                'verbose_name': 'Контракт клиента',
                'verbose_name_plural': 'Контракты клиентов',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ContractFiles',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', models.SlugField(max_length=255, verbose_name='Слаг')),
                ('title', models.CharField(help_text='Введите название файла...', max_length=255, verbose_name='Название')),
                ('description', models.TextField(help_text='Введите описание файла...', verbose_name='Описание')),
                ('file', models.FileField(upload_to=client_app.models.contract_files_directory_path, verbose_name='Файл')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Добавлен')),
                ('contract', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='files', to='client_app.contracts', verbose_name='Контракт')),
            ],
            options={
                'verbose_name': 'Файл контракта',
                'verbose_name_plural': 'Файлы контрактов',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ContactPersons',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(help_text='Введите фамилию лица...', max_length=255, verbose_name='Фамилия')),
                ('second_name', models.CharField(help_text='Введите имя лица...', max_length=255, verbose_name='Имя')),
                ('last_name', models.CharField(blank=True, help_text='Введите отчество лица...', max_length=255, verbose_name='Отчество')),
                ('post', models.CharField(help_text='Введите должность лица...', max_length=255, verbose_name='Должность')),
                ('email', models.EmailField(help_text='Введите email адрес лица...', max_length=254, unique=True, verbose_name='Email')),
                ('phone', phonenumber_field.modelfields.PhoneNumberField(max_length=128, region='RU', unique=True, verbose_name='Номер телефона')),
                ('note', models.TextField(blank=True, help_text='Введите заметки по контактному лицу...', verbose_name='Заметки')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Добавлен')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Обновлён')),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='contact_persons', to='client_app.clients', verbose_name='Клиент')),
            ],
            options={
                'verbose_name': 'Контактное лицо',
                'verbose_name_plural': 'Контактные лица',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ClientFiles',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', models.SlugField(max_length=255, verbose_name='Слаг')),
                ('title', models.CharField(help_text='Введите название файла...', max_length=255, verbose_name='Название')),
                ('description', models.TextField(help_text='Введите описание файла...', verbose_name='Описание')),
                ('file', models.FileField(upload_to=client_app.models.user_files_directory_path, verbose_name='Файл')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Добавлен')),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='files', to='client_app.clients', verbose_name='Клиент')),
            ],
            options={
                'verbose_name': 'Файл клиента',
                'verbose_name_plural': 'Файлы клиентов',
                'ordering': ['-created_at'],
            },
        ),
    ]
